name: EC2 Instancia Frontend

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get the highest version from DockerHub
        id: get_version
        run: |
          response=$(curl -s https://hub.docker.com/v2/repositories/${{ secrets.DOCKER_USERNAME }}/frontend/tags/)
          tags=$(echo $response | jq -r '.results[] | select(.name | test("^v[0-9]+\\.[0-9]+$")) | .name' | sed 's/^v//')
          if [ -z "$tags" ]; then
            NEW_VERSION="v1.0"
          else
            highest_version=$(echo "$tags" | sort -V | tail -n 1)
            MAJOR=$(echo $highest_version | cut -d. -f1)
            MINOR=$(echo $highest_version | cut -d. -f2)
            NEW_MINOR=$((MINOR + 1))
            NEW_VERSION="v${MAJOR}.${NEW_MINOR}"
          fi
          echo "next=$NEW_VERSION" >> $GITHUB_OUTPUT
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        run: |
          NEW_VERSION=${{ steps.get_version.outputs.next }}
          docker build . --file Dockerfile \
            --tag ${{ secrets.DOCKER_USERNAME }}/frontend:$NEW_VERSION \
            --tag ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:$NEW_VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST1 }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            sudo yum update -y
            sudo yum install -y docker
            sudo service docker start
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            sudo docker ps -q --filter "name=frontend" | grep -q . && \
            sudo docker stop frontend && \
            sudo docker rm frontend || true
            sudo docker run -d --name frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/frontend:latest
